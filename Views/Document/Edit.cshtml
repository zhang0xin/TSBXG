@model TSBXG.Models.Document

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Document", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return checkform()" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Document</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            <label for="ImageFile">上传图片</label>
        </div>
        <div class="editor-field">
            @if (Model.ImageData != null)
            {
                <img src="@Url.Action("ImageById", "Document", new { Model.Id })" />
            }
            <input id="ImageFile" type="file" name="ImageFile" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Html)
        </div>
        <div class="editor-field">

            @Html.HiddenFor(model => model.Html)
            <div id="summernote">@Html.Raw(HttpUtility.HtmlDecode(Model.Html))</div>
            @Html.ValidationMessageFor(model => model.Html)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}
<script type="text/javascript">
    function HTMLEncode(html) {
        var temp = document.createElement("div");
        (temp.textContent != null) ? (temp.textContent = html) : (temp.innerText = html);
        var output = temp.innerHTML;
        temp = null;
        return output;
    }
    function checkform() {
        $('input[name=Html]').val(HTMLEncode($('#summernote').summernote('code')));
        return true;
    }
    $(document).ready(function () {
        $('#summernote').summernote({ lang: 'zh-CN' });
    });
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
